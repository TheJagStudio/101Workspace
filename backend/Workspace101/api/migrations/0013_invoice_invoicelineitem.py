# Generated by Django 5.0.2 on 2025-06-01 19:34

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0012_product_totalgrossmarginprecentage"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("totalQuantity", models.IntegerField()),
                ("discount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("totalAmount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("status", models.CharField(max_length=100)),
                ("insertedTimestamp", models.DateTimeField()),
                ("customerName", models.CharField(max_length=255)),
                ("companyName", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("storeName", models.CharField(max_length=255)),
                ("orderTags", models.TextField()),
                ("dueAmount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("dueDate", models.DateTimeField()),
                ("orderNotes", models.TextField()),
                ("salesRepId", models.IntegerField()),
                ("salesRepName", models.CharField(max_length=255)),
                ("pickerId", models.IntegerField(blank=True, null=True)),
                ("pickerName", models.CharField(blank=True, max_length=255, null=True)),
                ("trackingUrl", models.URLField(blank=True, max_length=500, null=True)),
                (
                    "trackingNumber",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("salesOrderId", models.IntegerField(blank=True, null=True)),
                ("quotationId", models.IntegerField(blank=True, null=True)),
                ("shippingStatusId", models.IntegerField()),
                ("shippingStatusName", models.CharField(max_length=255)),
                ("stateId", models.IntegerField()),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("county", models.CharField(blank=True, max_length=100, null=True)),
                ("dbaName", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="InvoiceLineItem",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("createdBy", models.IntegerField(blank=True, null=True)),
                ("insertedTimestamp", models.DateTimeField(blank=True, null=True)),
                ("updatedBy", models.IntegerField(blank=True, null=True)),
                ("updatedTimestamp", models.DateTimeField(blank=True, null=True)),
                ("orderId", models.IntegerField()),
                ("productId", models.IntegerField()),
                ("masterProductId", models.IntegerField(blank=True, null=True)),
                ("quantity", models.IntegerField()),
                ("availableQuantity", models.IntegerField()),
                ("deleted", models.BooleanField(default=False)),
                ("inStock", models.BooleanField(default=False)),
                ("shippingQuantity", models.IntegerField()),
                ("packs", models.IntegerField()),
                ("costPrice", models.DecimalField(decimal_places=2, max_digits=10)),
                ("maxCostPrice", models.DecimalField(decimal_places=2, max_digits=10)),
                ("retailPrice", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "couponDiscount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("discountValue", models.DecimalField(decimal_places=2, max_digits=10)),
                ("discountType", models.CharField(max_length=50)),
                (
                    "discountAmount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("taxClassId", models.IntegerField()),
                ("taxType", models.CharField(max_length=100)),
                ("taxPercentage", models.DecimalField(decimal_places=2, max_digits=5)),
                ("taxPerVolume", models.DecimalField(decimal_places=2, max_digits=10)),
                ("taxPerOunce", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "directTaxPercentage",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("taxIncludedInSellingPrice", models.BooleanField(default=False)),
                (
                    "volume",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("size", models.IntegerField()),
                ("taxAmount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("totalAmount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "retailAfterDiscount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("updated", models.BooleanField(default=False)),
                (
                    "loyaltyPointPerProduct",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=100)),
                ("productInventoryId", models.IntegerField()),
                ("productName", models.CharField(max_length=255)),
                ("sku", models.CharField(max_length=50)),
                ("upc", models.CharField(max_length=50)),
                ("singleUpc", models.CharField(max_length=50)),
                ("discountId", models.IntegerField(blank=True, null=True)),
                ("boxQuantity", models.IntegerField()),
                ("serviceProduct", models.BooleanField(default=False)),
                ("trackInventoryByImei", models.BooleanField(default=False)),
                ("trackInventory", models.BooleanField(default=False)),
                ("sameCostAndRetail", models.BooleanField(default=False)),
                ("productIMEIList", models.TextField(blank=True, null=True)),
                ("grossMargin", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "grossMarginPercentage",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("isNoteName", models.BooleanField(default=False)),
                (
                    "masterCategoryName",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "productDefaultLocation",
                    models.CharField(blank=True, max_length=255),
                ),
                ("urlAlias", models.CharField(max_length=255)),
                ("productImageList", models.TextField(blank=True, null=True)),
                ("dropShipment", models.BooleanField(default=False)),
                ("primaryVendorId", models.IntegerField()),
                (
                    "primaryVendorName",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("inventoryValidated", models.BooleanField(default=False)),
                (
                    "alternativeName",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("salesOrderLineItemId", models.IntegerField(blank=True, null=True)),
                ("salesOrderQuantity", models.IntegerField()),
                (
                    "minimumSellingPrice",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("msrp", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
    ]
